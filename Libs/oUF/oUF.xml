<Ui xmlns="http://www.blizzard.com/wow/ui/">
	<Script file="init.lua"/>
	<Script file="private.lua"/>
	<Script file="ouf.lua"/>
	<Script file="events.lua"/>
	<Script file="factory.lua"/>
	<Script file="blizzard.lua"/>
	<Script file="units.lua"/>
	<Script file="colors.lua"/>

	<Script file="elements\power.lua"/>
	<Script file="elements\auras.lua"/>
	<Script file="elements\health.lua"/>
	<Script file="elements\raidtargetindicator.lua"/>
	<Script file="elements\leaderindicator.lua"/>
	<Script file="elements\combatindicator.lua"/>
	<Script file="elements\restingindicator.lua"/>
	<Script file="elements\pvpindicator.lua"/>
	<Script file="elements\portrait.lua"/>
	<Script file="elements\range.lua"/>
	<Script file="elements\castbar.lua"/>
	<Script file="elements\threatindicator.lua"/>
	<Script file="elements\tags.lua"/>
	<Script file="elements\assistantindicator.lua"/>
	<Script file="elements\runes.lua"/>
	<Script file="elements\grouproleindicator.lua"/>
	<Script file="elements\healthprediction.lua"/>
	<Script file="elements\powerprediction.lua"/>
	<Script file="elements\phaseindicator.lua"/>
	<Script file="elements\readycheckindicator.lua"/>
	<Script file="elements\questindicator.lua"/>
	<Script file="elements\alternativepower.lua"/>
	<Script file="elements\totems.lua"/>
	<Script file="elements\resurrectindicator.lua"/>
	<Script file="elements\additionalpower.lua"/>
	<Script file="elements\classpower.lua"/>
	<Script file="elements\stagger.lua"/>
	<Script file="elements\raidroleindicator.lua"/>

	<Script file="finalize.lua"/>

	<!-- Clique support -->
	<Button name="oUF_ClickCastUnitTemplate" virtual="true" inherits="SecureUnitButtonTemplate, SecureHandlerStateTemplate, SecureHandlerEnterLeaveTemplate">
		<Attributes>
			<Attribute name="_onenter" type="string" value="local snippet = self:GetAttribute('clickcast_onenter'); if snippet then self:Run(snippet) end"/>
			<Attribute name="_onleave" type="string" value="local snippet = self:GetAttribute('clickcast_onleave'); if snippet then self:Run(snippet) end"/>
			<Attribute name="refreshUnitChange" type="string" value="local unit = self:GetAttribute('unit'); if unit then RegisterStateDriver(self, 'vehicleui', ('[@%s,unithasvehicleui]vehicle; novehicle'):format(unit)) else UnregisterStateDriver(self, 'vehicleui') end"/>
			<Attribute name="_onstate-vehicleui" type="string" value="local unit = self:GetAttribute('unit'); if unit and newstate == 'vehicle' and UnitPlayerOrPetInRaid(unit) and not UnitTargetsVehicleInRaidUI(unit) then self:SetAttribute('toggleForVehicle', false) else self:SetAttribute('toggleForVehicle', true) end"/>
		</Attributes>
	</Button>

	<Button name="oUF_MainTank" inherits="SecureUnitButtonTemplate" hidden="true" virtual="true" movable="true">
		<Frames>
			<Button name="$parentTarget" inherits="SecureUnitButtonTemplate" >
				<Anchors>
					<Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parent" >
						<Offset>
							<AbsDimension x="8" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Attributes>
					<Attribute name="unitsuffix" type="string" value="target"/>
					<Attribute name="useparent-unit" type="boolean" value="true"/>
					<Attribute name="type1" type="string" value="target"/>
					<Attribute name="initial-unitWatch" type="boolean" value="true"/>
				</Attributes>
			</Button>
		</Frames>
	</Button>
  
  	<Frame name="ClassNameplateBarComboPointFrameYo" virtual="true">
		<Size x="13" y="13"/>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture parentKey="Background" atlas="ClassOverlay-ComboPoint-Off" useAtlasSize="false">
					<Size x="10" y="10"/>
					<Anchors>
						<Anchor point="TOPLEFT"/>
					</Anchors>
				</Texture>
			</Layer>
			
			<Layer level="ARTWORK">
				<Texture parentKey="Point" atlas="ClassOverlay-ComboPoint" useAtlasSize="false" alpha="0">
					<Size x="10" y="10"/>
					<Anchors>
						<Anchor point="TOPLEFT"/>
					</Anchors>
				</Texture>
	<!--
			<Texture parentKey="BackFX" atlas="ComboPoints-FX-Circle" useAtlasSize="false" alpha="0">
					<Size x="10" y="10"/>
					<Anchors>
						<Anchor point="TOPLEFT"/>
					</Anchors>
				</Texture> 
	-->
			</Layer>
		</Layers>
		<Animations>
			<AnimationGroup parentKey="Fadein" setToFinalAlpha="true">
				<Alpha parentKey="AlphaAnim" childKey="Point" fromAlpha="0" toAlpha="1" duration="0.2"/>
			</AnimationGroup>
			<AnimationGroup parentKey="Fadeout" setToFinalAlpha="true">
				<Alpha parentKey="AlphaAnim" childKey="Point" fromAlpha="1" toAlpha="0" duration="0.2"/>
			</AnimationGroup>
		</Animations>
	</Frame>
	<!--
		Sub-object as a child of the parent unit frame:
	<Button name="oUF_HeaderTargetTemplate" inherits="SecureUnitButtonTemplate" virtual="true">
		<Frames>
			<Button name="$parentTarget" inherits="SecureUnitButtonTemplate">
				<Attributes>
					<Attribute name="unitsuffix" type="string" value="target"/>
					<Attribute name="useparent-unit" type="boolean" value="true"/>
				</Attributes>
			</Button>
		</Frames>
	</Button>

		Separate unit template example:
	<Button name="oUF_HeaderSeparateSubOjectsTemplate" inherits="SecureUnitButtonTemplate" virtual="true">
		<Attributes>
			<Attribute name="oUF-onlyProcessChildren" type="boolean" value="true"/>
		</Attributes>

		<Frames>
			<Button name="$parentUnit" inherits="SecureUnitButtonTemplate">
				<Attributes>
					<Attribute name="useparent-unit" type="boolean" value="true"/>
				</Attributes>
			</Button>

			<Button name="$parentPet" inherits="SecureUnitButtonTemplate">
				<Attributes>
					<Attribute name="unitsuffix" type="string" value="pet"/>
					<Attribute name="useparent-unit" type="boolean" value="true"/>
				</Attributes>
			</Button>

			<Button name="$parentTarget" inherits="SecureUnitButtonTemplate">
				<Attributes>
					<Attribute name="unitsuffix" type="string" value="target"/>
					<Attribute name="useparent-unit" type="boolean" value="true"/>
				</Attributes>
			</Button>
		</Frames>
	</Button>
	-->
</Ui>
